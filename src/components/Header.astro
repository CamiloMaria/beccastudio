---
// Define your navigation items here
const navItems = [
  { label: "Inicio", href: "#inicio" },
  { label: "Servicios", href: "#servicios" },
  { label: "Portafolio", href: "#portafolio" },
  { label: "Testimonios", href: "#testimonios" },
  { label: "Sobre mí", href: "#sobre-mi" },
  { label: "Contacto", href: "#contacto" },
];
---

<header
  id="header"
  class="fixed top-0 left-0 right-0 z-50 py-4 transition-all duration-300"
>
  <div class="container mx-auto px-4 md:px-6 flex items-center justify-between">
    <!-- Logo -->
    <a href="/" class="logo">
      <span class="text-xl md:text-2xl font-bold text-white">
        BECCA<span class="text-gold-light">STUDIO</span>
      </span>
    </a>

    <!-- Desktop Navigation -->
    <nav class="hidden md:flex items-center space-x-6">
      {
        navItems.map((item) => (
          <a
            href={item.href}
            class="text-white hover:text-gold-light transition-colors duration-200 text-sm tracking-wide relative after:absolute after:bottom-0 after:left-0 after:h-0.5 after:w-0 after:bg-gold-light after:transition-all after:duration-300 hover:after:w-full"
          >
            {item.label}
          </a>
        ))
      }
      <a
        href="#contact"
        class="border border-gold-light text-gold-light hover:bg-gold-light/10 px-4 py-2 transition-colors duration-300 text-sm tracking-widest"
      >
        Reserva una sesión
      </a>
    </nav>

    <!-- Mobile Menu Button -->
    <button
      id="menu-toggle"
      class="md:hidden text-gold-light"
      aria-label="Toggle menu"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="h-6 w-6"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M4 6h16M4 12h16M4 18h16"></path>
      </svg>
    </button>
  </div>

  <!-- Mobile Navigation -->
  <div
    id="mobile-menu"
    class="md:hidden fixed inset-0 top-[61px] z-50 bg-black/90 backdrop-blur-sm hidden"
  >
    <div class="container mx-auto px-4 py-6 flex flex-col space-y-4">
      {
        navItems.map((item) => (
          <a
            href={item.href}
            class="text-xl py-2 border-b border-white/10 text-white hover:text-gold-light mobile-link"
          >
            {item.label}
          </a>
        ))
      }
      <a
        href="#contact"
        class="border border-gold-light text-gold-light hover:bg-gold-light/10 py-3 text-center transition-colors duration-300 mt-4 mobile-link"
      >
        Reserva una sesión
      </a>
    </div>
  </div>
</header>

<script>
  // Elements
  const header = document.getElementById("header");
  const menuToggle = document.getElementById("menu-toggle");
  const mobileMenu = document.getElementById("mobile-menu");
  const mobileLinks = document.querySelectorAll(".mobile-link");

  // Toggle mobile menu
  menuToggle?.addEventListener("click", () => {
    mobileMenu?.classList.toggle("hidden");

    // Update the menu icon
    if (menuToggle.innerHTML.includes("M4 6h16M4 12h16M4 18h16")) {
      menuToggle.innerHTML = `
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      `;
    } else {
      menuToggle.innerHTML = `
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
        </svg>
      `;
    }
  });

  // Close mobile menu when clicking on links
  mobileLinks.forEach((link) => {
    link.addEventListener("click", () => {
      mobileMenu?.classList.add("hidden");

      // Reset menu icon
      if (menuToggle) {
        menuToggle.innerHTML = `
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
        `;
      }
    });
  });

  // Change header background on scroll
  window.addEventListener("scroll", () => {
    if (window.scrollY > 20) {
      header?.classList.add(
        "bg-black/90",
        "backdrop-blur-sm",
        "shadow-md",
        "py-3"
      );
      header?.classList.remove("py-4");
    } else {
      header?.classList.remove(
        "bg-black/90",
        "backdrop-blur-sm",
        "shadow-md",
        "py-3"
      );
      header?.classList.add("py-4");
    }
  });

  // Active link highlighting
  const sections = document.querySelectorAll<HTMLElement>("section[id]");

  function highlightNavigation() {
    const scrollPosition = window.scrollY + 100;

    sections.forEach((section) => {
      const sectionTop = section.offsetTop;
      const sectionHeight = section.offsetHeight;
      const sectionId = section.getAttribute("id");

      const navItem = document.querySelector(`a[href="#${sectionId}"]`);

      if (
        scrollPosition >= sectionTop &&
        scrollPosition < sectionTop + sectionHeight
      ) {
        navItem?.classList.add("text-gold-light");
        navItem?.classList.remove("text-white");
      } else {
        navItem?.classList.remove("text-gold-light");
        navItem?.classList.add("text-white");
      }
    });
  }

  window.addEventListener("scroll", highlightNavigation);
</script>
